# coding: utf-8

"""
    LokoPay API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2024-08-22
    Contact: dev@lokopay.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from loko_client.models.create_payout_request import CreatePayoutRequest

class TestCreatePayoutRequest(unittest.TestCase):
    """CreatePayoutRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreatePayoutRequest:
        """Test CreatePayoutRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreatePayoutRequest`
        """
        model = CreatePayoutRequest()
        if include_optional:
            return CreatePayoutRequest(
                amount = '',
                currency = '',
                description = '',
                customer = loko_client.models.payment_customer.PaymentCustomer(
                    id = '', 
                    email = '', 
                    ip_address = '', 
                    destination_address = '', 
                    destination_network = '', 
                    destination_currency = '', ),
                transfer_with_native_token = loko_client.models.transfer_with_native_token.TransferWithNativeToken(
                    enabled = True, 
                    base_amount = '', 
                    base_network = '', 
                    base_currency = '', )
            )
        else:
            return CreatePayoutRequest(
        )
        """

    def testCreatePayoutRequest(self):
        """Test CreatePayoutRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
